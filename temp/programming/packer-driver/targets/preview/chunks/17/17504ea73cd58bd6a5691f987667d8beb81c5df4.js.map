{"version":3,"sources":["file:///C:/Users/jmluc/FracturableObjects/assets/Scripts/DelaunayPackage/UnitTest.ts"],"names":["_decorator","Component","RichText","Vec2","linkNode","findClosestAngle","ccclass","property","executeInEditMode","UnitTest","onLoad","console","log","onEnable","outputText","string","tests","push","test1","forEach","t","name","update","deltaTime","degToRad","angleDeg","vectores","angulos","linksNodesTest","i","length","x","y"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, RichText, Vec2 } from 'cc';\r\nimport { linkNode } from '../LinkNodeClass';\r\nimport { TEST } from 'cc/env';\r\nimport { findClosestAngle } from './DelaunaySplitter';\r\n \r\nconst { ccclass, property,executeInEditMode } = _decorator;\r\n\r\n\r\n@ccclass('UnitTest')\r\n@executeInEditMode\r\nexport class UnitTest extends Component {\r\n\r\n    @property(RichText)\r\n    outputText: RichText\r\n\r\n  \r\n    \r\n      \r\n\r\n   onLoad(){\r\n    \r\n  \r\n    console.log(\"ON LOAD UNIT TEST\")\r\n     \r\n    }\r\n\r\n\r\n    onEnable() {\r\n \r\n\r\n        this.outputText.string=\"<color=#0000ff>--- RUNNING TESTS ---\\n </color>\"\r\n     \r\n        const tests:Function[]=[];\r\n \r\n        tests.push( this.test1);\r\n    tests.forEach(t=> {\r\n        this.outputText.string+=\"<color=#00ff00>\"+t.name+\"\\n</color>\"\r\n        if(t()) {\r\n            this.outputText.string+=\"<color=#00ff00>PASSED\\n</color>\"\r\n        } else {\r\n            this.outputText.string+=\"<color=#ff0000>FAILED\\n</color>\"\r\n        }\r\n    })\r\n          \r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    static degToRad(angleDeg:number) {\r\n        return (angleDeg/360)*2*3.141592654\r\n    }\r\n\r\n     test1() {\r\n        let vectores: Vec2[]=[];\r\n        let angulos : number[]=[];\r\n \r\n        vectores.push(new Vec2(1,0))\r\n        vectores.push(new Vec2(0.94,0.34))\r\n        vectores.push(new Vec2(0.55,0.84))\r\n        vectores.push(new Vec2(0,1))\r\n        vectores.push(new Vec2(-0.52,0.86))\r\n        vectores.push(new Vec2(-1,0))\r\n        vectores.push(new Vec2(-0.93,-0.36))\r\n        vectores.push(new Vec2(-0.31,-0.95))\r\n        vectores.push(new Vec2(0,-1))\r\n        vectores.push(new Vec2(0.20,-0.98))\r\n        vectores.push(new Vec2(0.99,-0.17))\r\n\r\n        angulos.push(0);\r\n        angulos.push(20)\r\n        angulos.push(56.7)\r\n        angulos.push(90)\r\n        angulos.push(121.1)\r\n        angulos.push(180)\r\n        angulos.push(201.1)\r\n        angulos.push(252)\r\n        angulos.push(270)\r\n        angulos.push(281.5)\r\n        angulos.push(350.4)\r\n        console.log(vectores)\r\n        console.log(\"------- TEST 1 -------\")\r\n        let linksNodesTest: linkNode[]=[];\r\n        for(let i=0; i<vectores.length; i++ ) {\r\n        linksNodesTest.push(new linkNode(vectores[i].x,vectores[i].y,UnitTest.degToRad(angulos[i])));\r\n        }\r\n\r\n        return findClosestAngle(UnitTest.degToRad(179),linksNodesTest)==7;\r\n\r\n   \r\n       \r\n\r\n    }\r\n}\r\n\r\n\r\n"]}