{"version":3,"sources":["file:///C:/Users/jmluc/FracturableObjects/assets/Scripts/Legacy/Detonator.ts"],"names":["_decorator","AudioSource","BoxCollider2D","CCInteger","Component","Contact2DType","instantiate","Prefab","Sprite","ccclass","property","Detonator","audioSource","elemento","timeElpased","detonated","activated","getTimeToDetonate","milisecs","onLoad","getComponent","collider","console","log","on","BEGIN_CONTACT","onBeginContact","setTimeToDetonate","time","selfCollider","otherCollider","contact","node","update","deltaTime","play","explosion","parent","detonator","destroy"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,W,OAAAA,W;AAA2EC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;;;;;;;;;OAC/K;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;2BAGjBW,S,WADZF,OAAO,CAAC,WAAD,C,UAIHC,QAAQ,CAACP,SAAD,C,UAGRO,QAAQ,CAACF,MAAD,C,UAGRE,QAAQ,CAACH,MAAD,C,2BAVb,MACaI,SADb,SAC+BP,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAY7BQ,WAZ6B;AAAA,eAa7BC,QAb6B;AAAA,eAc7BC,WAd6B,GAcf,CAde;AAAA,eAe7BC,SAf6B,GAejB,KAfiB;AAAA,eAgB9BC,SAhB8B,GAgBlB,KAhBkB;AAAA;;AAmBrCC,QAAAA,iBAAiB,GAAQ;AACrB,iBAAO,KAAKC,QAAZ;AACH;;AAEDC,QAAAA,MAAM,GAAG;AACL,eAAKP,WAAL,GAAmB,KAAKQ,YAAL,CAAkBnB,WAAlB,CAAnB;AACA,cAAIoB,QAAQ,GAAG,KAAKD,YAAL,CAAkBlB,aAAlB,CAAf;;AACA,cAAImB,QAAJ,EAAc;AACVC,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAF,YAAAA,QAAQ,CAACG,EAAT,CAAYnB,aAAa,CAACoB,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACH;AACJ;;AAEMC,QAAAA,iBAAiB,CAACC,IAAD,EAAe;AACnC,eAAKV,QAAL,GAAgBU,IAAhB;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKL,QAA5B;AACH;;AAEDQ,QAAAA,cAAc,CAACG,YAAD,EAA2BC,aAA3B,EAA6DC,OAA7D,EAAgG;AAC1GT,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,cAAI,CAAC,KAAKR,SAAV,EAAqB;AACjB,iBAAKF,QAAL,GAAgBiB,aAAa,CAACE,IAA9B;AACH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,cAAI,KAAKlB,SAAT,EAAoB;AAChB,iBAAKF,WAAL,IAAoBoB,SAApB;;AACA,gBAAI,KAAKpB,WAAL,GAAmB,KAAKI,QAAxB,IAAoC,CAAC,KAAKH,SAA9C,EAAyD;AACrD,mBAAKA,SAAL,GAAiB,IAAjB,CADqD,CAErD;;AACA,mBAAKH,WAAL,CAAiBuB,IAAjB;AACA,oBAAMH,IAAI,GAAG1B,WAAW,CAAC,KAAK8B,SAAN,CAAxB;AACAJ,cAAAA,IAAI,CAACK,MAAL,GAAc,KAAKL,IAAnB;AACAV,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,mBAAKe,SAAL,CAAeC,OAAf;AACA,mBAAK1B,QAAL,CAAc0B,OAAd;AACA,mBAAKA,OAAL;AACH;AACJ;AAEJ;;AA5DoC,O","sourcesContent":["import { _decorator, AudioSource, BoxCollider2D, CCInteger, Collider2D, Component, Contact2DType, instantiate, IPhysics2DContact, Node, ParticleSystem2D, PolygonCollider2D, Prefab, Sprite } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Detonator')\r\nexport class Detonator extends Component {\r\n\r\n\r\n    @property(CCInteger)\r\n    private milisecs;\r\n\r\n    @property(Sprite)\r\n    private detonator: Sprite;\r\n\r\n    @property(Prefab)\r\n    private explosion: Prefab;\r\n\r\n    private audioSource: AudioSource;\r\n    private elemento: Node;\r\n    private timeElpased = 0;\r\n    private detonated = false;\r\n    public activated = false;\r\n\r\n\r\n    getTimeToDetonate(): any {\r\n        return this.milisecs;\r\n    }\r\n\r\n    onLoad() {\r\n        this.audioSource = this.getComponent(AudioSource);\r\n        let collider = this.getComponent(BoxCollider2D);\r\n        if (collider) {\r\n            console.log(\"THERE IS COLLIDER\")\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        }\r\n    }\r\n\r\n    public setTimeToDetonate(time: number) {\r\n        this.milisecs = time;\r\n        console.log(\"TIME: \" + this.milisecs);\r\n    }\r\n\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: PolygonCollider2D, contact: IPhysics2DContact | null) {\r\n        console.log(\"IN CONTACTTTT!!!!\")\r\n        if (!this.detonated) {\r\n            this.elemento = otherCollider.node;\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this.activated) {\r\n            this.timeElpased += deltaTime;\r\n            if (this.timeElpased > this.milisecs && !this.detonated) {\r\n                this.detonated = true;\r\n                //this.getComponent(AudioSource).replicated=true;\r\n                this.audioSource.play();\r\n                const node = instantiate(this.explosion);\r\n                node.parent = this.node;\r\n                console.log(\"DESTROOOOYY\")\r\n                this.detonator.destroy();\r\n                this.elemento.destroy();\r\n                this.destroy();\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}