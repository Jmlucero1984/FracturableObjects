{"version":3,"sources":["file:///C:/Users/jmluc/FracturableObjects/assets/Scripts/DelaunayPackage/FractDelaunay.ts"],"names":["_decorator","CCBoolean","CCInteger","Component","Contact2DType","Mat4","Material","PolygonCollider2D","Prefab","RigidBody2D","Texture2D","Vec2","DelaunayAssemblerImplementer","DelaunayFracture","findFracture","linkNode","plainVertex","StaticFractureManager","ccclass","property","executeInEditMode","FractDelaunay","group","type","implementer","area","available","delaunayPoints","minArea","fractureObj","previousPos","velVect","previousTime","jsonObject","onLoad","polygonPoints","console","log","node","getComponent","addComponent","baseTexture","Render_Mat","ancestor","createPlainVertexData","JSON","parse","forEach","vertex","border","push","x","y","points","apply","customLoad","enabled","setListeners","getArea","scheduleOnce","c","onEnable","verte","pV","links","linke","_angle","start","position","p","on","END_CONTACT","onEndContact","BEGIN_CONTACT","onBeginContact","update","deltaTime","newPos","selfCollider","otherCollider","contact","otherFracturable","enoughImpulse","recursiveness","velA","velB","Math","abs","name","inverseWorldMatrix","invert","getWorldMatrix","localContactPoint","getWorldManifold","transformMat4","normalContactPoint","getManifold","localNormal","result","getDelaunayPoints","length","cola","enqueue","lengthVector","a","b","sqrt","pow","center","coords","maxX","minX","maxY","minY","element","offsetX","offsetY","e"],"mappings":"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","sourcesContent":["import { _decorator, CCBoolean, CCInteger, Collider2D, Component, Contact2DType, instantiate, IPhysics2DContact, Mat4, Material, Node, PolygonCollider2D, Prefab, random, RigidBody, RigidBody2D, Texture2D, Vec2, Vec3 } from 'cc';\r\nimport { DelaunayAssemblerImplementer } from './DelaunayAssemblerImplementer';\r\nimport { calcAproxArea, DelaunayFracture, findFracture, getFracturable, linkNode, plainVertex } from './DelaunaySplitter';\r\nimport { StaticFractureManager } from './StaticFractureManager';\r\n\r\nconst { ccclass, property,executeInEditMode } = _decorator;\r\n\r\n\r\n\r\n \r\n@ccclass('FractDelaunay')\r\n@executeInEditMode\r\nexport class FractDelaunay extends Component {\r\n   \r\n\r\n    @property(Prefab)\r\n    prefab: Prefab;\r\n    @property(CCBoolean)\r\n    ancestor: boolean = false;\r\n    @property(CCInteger)\r\n    recursiveness: number = 3;\r\n    @property(CCInteger)\r\n    AreaMinima: number = 200;\r\n    @property({ group: \"Render\" })\r\n    @property(Texture2D)\r\n    baseTexture: Texture2D = null;\r\n    @property({ group: \"Render\" })\r\n    @property(Material)\r\n    Render_Mat: Material = null;\r\n    @property({ type: [Vec2] })\r\n\r\n    public polygonPoints: Vec2[] = [];\r\n    public implementer: DelaunayAssemblerImplementer;\r\n    private area: number;\r\n    public available = true;\r\n    public delaunayPoints: plainVertex[] = [];\r\n    private minArea: number;\r\n    public fractureObj: DelaunayFracture;\r\n    private previousPos:Vec2;\r\n    public velVect:Vec2;\r\n    private previousTime:number;\r\n\r\n    private jsonObject = '[{\"x\":0,\"y\":0,\"border\":true,\"links\":[null]},{\"x\":10,\"y\":0,\"border\":true,\"links\":[{\"x\":20,\"y\":10,\"_angle\":0.785},{\"x\":0,\"y\":10,\"_angle\":2.356},{\"x\":10,\"y\":13,\"_angle\":1.571}]},{\"x\":20,\"y\":0,\"border\":true,\"links\":[null]},{\"x\":20,\"y\":10,\"border\":true,\"links\":[{\"x\":10,\"y\":0,\"_angle\":3.927},{\"x\":10,\"y\":13,\"_angle\":1.862}]},{\"x\":20,\"y\":20,\"border\":true,\"links\":[{\"x\":10,\"y\":13,\"_angle\":3.752},{\"x\":11,\"y\":26,\"_angle\":2.159}]},{\"x\":20,\"y\":30,\"border\":true,\"links\":[{\"x\":8,\"y\":41,\"_angle\":2.313},{\"x\":11,\"y\":26,\"_angle\":3.56}]},{\"x\":20,\"y\":40,\"border\":true,\"links\":[{\"x\":8,\"y\":41,\"_angle\":1.654},{\"x\":18,\"y\":47,\"_angle\":2.863}]},{\"x\":30,\"y\":40,\"border\":true,\"links\":[{\"x\":18,\"y\":47,\"_angle\":2.099},{\"x\":31,\"y\":52,\"_angle\":1.488}]},{\"x\":40,\"y\":40,\"border\":true,\"links\":[{\"x\":31,\"y\":52,\"_angle\":2.498},{\"x\":48,\"y\":48,\"_angle\":0.785}]},{\"x\":50,\"y\":40,\"border\":true,\"links\":[{\"x\":48,\"y\":48,\"_angle\":2.897},{\"x\":60,\"y\":51,\"_angle\":0.833}]},{\"x\":60,\"y\":40,\"border\":true,\"links\":[{\"x\":60,\"y\":51,\"_angle\":1.571},{\"x\":68,\"y\":52,\"_angle\":0.983}]},{\"x\":70,\"y\":40,\"border\":true,\"links\":[{\"x\":68,\"y\":52,\"_angle\":2.976},{\"x\":81,\"y\":49,\"_angle\":0.686}]},{\"x\":80,\"y\":40,\"border\":true,\"links\":[{\"x\":81,\"y\":49,\"_angle\":1.46}]},{\"x\":90,\"y\":40,\"border\":true,\"links\":[{\"x\":81,\"y\":49,\"_angle\":2.356},{\"x\":90,\"y\":52,\"_angle\":1.571},{\"x\":99,\"y\":50,\"_angle\":0.838}]},{\"x\":100,\"y\":40,\"border\":true,\"links\":[{\"x\":99,\"y\":50,\"_angle\":3.042},{\"x\":110,\"y\":51,\"_angle\":0.833}]},{\"x\":110,\"y\":40,\"border\":true,\"links\":[{\"x\":110,\"y\":51,\"_angle\":1.571}]},{\"x\":120,\"y\":40,\"border\":true,\"links\":[{\"x\":110,\"y\":51,\"_angle\":2.404},{\"x\":119,\"y\":52,\"_angle\":3.058},{\"x\":128,\"y\":49,\"_angle\":0.844},{\"x\":130,\"y\":41,\"_angle\":0.1}]},{\"x\":120,\"y\":30,\"border\":true,\"links\":[{\"x\":130,\"y\":41,\"_angle\":0.833},{\"x\":131,\"y\":26,\"_angle\":5.061}]},{\"x\":120,\"y\":20,\"border\":true,\"links\":[{\"x\":128,\"y\":13,\"_angle\":5.431},{\"x\":131,\"y\":26,\"_angle\":0.499}]},{\"x\":120,\"y\":10,\"border\":true,\"links\":[{\"x\":130,\"y\":0,\"_angle\":5.498},{\"x\":128,\"y\":13,\"_angle\":0.359}]},{\"x\":120,\"y\":0,\"border\":true,\"links\":[null]},{\"x\":130,\"y\":0,\"border\":true,\"links\":[{\"x\":120,\"y\":10,\"_angle\":2.356},{\"x\":140,\"y\":10,\"_angle\":0.785},{\"x\":128,\"y\":13,\"_angle\":2.989}]},{\"x\":140,\"y\":0,\"border\":true,\"links\":[null]},{\"x\":140,\"y\":10,\"border\":true,\"links\":[{\"x\":130,\"y\":0,\"_angle\":3.927},{\"x\":128,\"y\":13,\"_angle\":1.816}]},{\"x\":140,\"y\":20,\"border\":true,\"links\":[{\"x\":128,\"y\":13,\"_angle\":3.67},{\"x\":131,\"y\":26,\"_angle\":2.159}]},{\"x\":140,\"y\":30,\"border\":true,\"links\":[{\"x\":130,\"y\":41,\"_angle\":2.404},{\"x\":131,\"y\":26,\"_angle\":3.56}]},{\"x\":140,\"y\":40,\"border\":true,\"links\":[{\"x\":130,\"y\":41,\"_angle\":1.67}]},{\"x\":140,\"y\":50,\"border\":true,\"links\":[{\"x\":130,\"y\":60,\"_angle\":2.356},{\"x\":128,\"y\":49,\"_angle\":3.225},{\"x\":130,\"y\":41,\"_angle\":3.874}]},{\"x\":140,\"y\":60,\"border\":true,\"links\":[null]},{\"x\":130,\"y\":60,\"border\":true,\"links\":[{\"x\":140,\"y\":50,\"_angle\":5.498},{\"x\":119,\"y\":52,\"_angle\":3.77},{\"x\":128,\"y\":49,\"_angle\":4.533}]},{\"x\":120,\"y\":60,\"border\":true,\"links\":[{\"x\":119,\"y\":52,\"_angle\":4.588}]},{\"x\":110,\"y\":60,\"border\":true,\"links\":[{\"x\":110,\"y\":51,\"_angle\":4.712},{\"x\":119,\"y\":52,\"_angle\":5.439}]},{\"x\":100,\"y\":60,\"border\":true,\"links\":[{\"x\":90,\"y\":52,\"_angle\":3.816},{\"x\":99,\"y\":50,\"_angle\":4.613},{\"x\":110,\"y\":51,\"_angle\":5.445}]},{\"x\":90,\"y\":60,\"border\":true,\"links\":[{\"x\":90,\"y\":52,\"_angle\":4.712}]},{\"x\":80,\"y\":60,\"border\":true,\"links\":[{\"x\":68,\"y\":52,\"_angle\":3.73},{\"x\":81,\"y\":49,\"_angle\":6.193},{\"x\":90,\"y\":52,\"_angle\":5.387}]},{\"x\":70,\"y\":60,\"border\":true,\"links\":[{\"x\":68,\"y\":52,\"_angle\":4.467}]},{\"x\":60,\"y\":60,\"border\":true,\"links\":[{\"x\":60,\"y\":51,\"_angle\":4.712},{\"x\":68,\"y\":52,\"_angle\":5.498}]},{\"x\":50,\"y\":60,\"border\":true,\"links\":[{\"x\":48,\"y\":48,\"_angle\":4.547},{\"x\":60,\"y\":51,\"_angle\":5.445}]},{\"x\":40,\"y\":60,\"border\":true,\"links\":[{\"x\":31,\"y\":52,\"_angle\":3.868},{\"x\":48,\"y\":48,\"_angle\":5.695}]},{\"x\":30,\"y\":60,\"border\":true,\"links\":[{\"x\":31,\"y\":52,\"_angle\":6.159}]},{\"x\":20,\"y\":60,\"border\":true,\"links\":[{\"x\":18,\"y\":47,\"_angle\":4.56},{\"x\":31,\"y\":52,\"_angle\":5.341}]},{\"x\":10,\"y\":60,\"border\":true,\"links\":[{\"x\":0,\"y\":50,\"_angle\":3.927},{\"x\":9,\"y\":48,\"_angle\":4.629},{\"x\":18,\"y\":47,\"_angle\":5.732}]},{\"x\":0,\"y\":60,\"border\":true,\"links\":[null]},{\"x\":0,\"y\":50,\"border\":true,\"links\":[{\"x\":10,\"y\":60,\"_angle\":0.785},{\"x\":8,\"y\":41,\"_angle\":5.557},{\"x\":9,\"y\":48,\"_angle\":4.931}]},{\"x\":0,\"y\":40,\"border\":true,\"links\":[{\"x\":8,\"y\":41,\"_angle\":0.124}]},{\"x\":0,\"y\":30,\"border\":true,\"links\":[{\"x\":8,\"y\":41,\"_angle\":0.942},{\"x\":11,\"y\":26,\"_angle\":5.061}]},{\"x\":0,\"y\":20,\"border\":true,\"links\":[{\"x\":10,\"y\":13,\"_angle\":5.323},{\"x\":11,\"y\":26,\"_angle\":0.499}]},{\"x\":0,\"y\":10,\"border\":true,\"links\":[{\"x\":10,\"y\":0,\"_angle\":5.498},{\"x\":10,\"y\":13,\"_angle\":0.291}]},{\"x\":8,\"y\":41,\"border\":false,\"links\":[{\"x\":0,\"y\":50,\"_angle\":2.415},{\"x\":0,\"y\":40,\"_angle\":3.266},{\"x\":20,\"y\":30,\"_angle\":5.454},{\"x\":20,\"y\":40,\"_angle\":4.796},{\"x\":0,\"y\":30,\"_angle\":4.084},{\"x\":9,\"y\":48,\"_angle\":1.429},{\"x\":11,\"y\":26,\"_angle\":6.086},{\"x\":18,\"y\":47,\"_angle\":0.54}]},{\"x\":9,\"y\":48,\"border\":false,\"links\":[{\"x\":10,\"y\":60,\"_angle\":1.488},{\"x\":0,\"y\":50,\"_angle\":1.789},{\"x\":8,\"y\":41,\"_angle\":4.57},{\"x\":18,\"y\":47,\"_angle\":4.823}]},{\"x\":10,\"y\":13,\"border\":false,\"links\":[{\"x\":10,\"y\":0,\"_angle\":4.712},{\"x\":20,\"y\":10,\"_angle\":5.004},{\"x\":0,\"y\":10,\"_angle\":3.433},{\"x\":20,\"y\":20,\"_angle\":0.611},{\"x\":0,\"y\":20,\"_angle\":2.182},{\"x\":11,\"y\":26,\"_angle\":1.494}]},{\"x\":11,\"y\":26,\"border\":false,\"links\":[{\"x\":20,\"y\":20,\"_angle\":5.3},{\"x\":20,\"y\":30,\"_angle\":0.418},{\"x\":0,\"y\":30,\"_angle\":1.92},{\"x\":0,\"y\":20,\"_angle\":3.641},{\"x\":8,\"y\":41,\"_angle\":2.944},{\"x\":10,\"y\":13,\"_angle\":4.636}]},{\"x\":18,\"y\":47,\"border\":false,\"links\":[{\"x\":20,\"y\":40,\"_angle\":6.005},{\"x\":30,\"y\":40,\"_angle\":5.24},{\"x\":20,\"y\":60,\"_angle\":1.418},{\"x\":10,\"y\":60,\"_angle\":2.59},{\"x\":9,\"y\":48,\"_angle\":1.681},{\"x\":8,\"y\":41,\"_angle\":3.682},{\"x\":31,\"y\":52,\"_angle\":0.367}]},{\"x\":31,\"y\":52,\"border\":false,\"links\":[{\"x\":30,\"y\":40,\"_angle\":4.629},{\"x\":40,\"y\":40,\"_angle\":5.64},{\"x\":40,\"y\":60,\"_angle\":0.727},{\"x\":30,\"y\":60,\"_angle\":3.017},{\"x\":18,\"y\":47,\"_angle\":3.509},{\"x\":20,\"y\":60,\"_angle\":2.2},{\"x\":48,\"y\":48,\"_angle\":4.943}]},{\"x\":48,\"y\":48,\"border\":false,\"links\":[{\"x\":40,\"y\":40,\"_angle\":3.927},{\"x\":50,\"y\":40,\"_angle\":6.038},{\"x\":50,\"y\":60,\"_angle\":1.406},{\"x\":40,\"y\":60,\"_angle\":2.554},{\"x\":31,\"y\":52,\"_angle\":1.802},{\"x\":60,\"y\":51,\"_angle\":0.245}]},{\"x\":60,\"y\":51,\"border\":false,\"links\":[{\"x\":50,\"y\":40,\"_angle\":3.975},{\"x\":60,\"y\":40,\"_angle\":4.712},{\"x\":48,\"y\":48,\"_angle\":3.387},{\"x\":60,\"y\":60,\"_angle\":1.571},{\"x\":50,\"y\":60,\"_angle\":2.304},{\"x\":68,\"y\":52,\"_angle\":0.124}]},{\"x\":68,\"y\":52,\"border\":false,\"links\":[{\"x\":80,\"y\":60,\"_angle\":0.588},{\"x\":70,\"y\":60,\"_angle\":1.326},{\"x\":60,\"y\":40,\"_angle\":4.124},{\"x\":70,\"y\":40,\"_angle\":6.118},{\"x\":60,\"y\":51,\"_angle\":3.266},{\"x\":60,\"y\":60,\"_angle\":2.356},{\"x\":81,\"y\":49,\"_angle\":4.939}]},{\"x\":81,\"y\":49,\"border\":false,\"links\":[{\"x\":80,\"y\":40,\"_angle\":4.602},{\"x\":90,\"y\":40,\"_angle\":5.498},{\"x\":70,\"y\":40,\"_angle\":3.827},{\"x\":68,\"y\":52,\"_angle\":1.798},{\"x\":80,\"y\":60,\"_angle\":3.051},{\"x\":90,\"y\":52,\"_angle\":0.322}]},{\"x\":90,\"y\":52,\"border\":false,\"links\":[{\"x\":100,\"y\":60,\"_angle\":0.675},{\"x\":90,\"y\":60,\"_angle\":1.571},{\"x\":81,\"y\":49,\"_angle\":3.463},{\"x\":90,\"y\":40,\"_angle\":4.712},{\"x\":80,\"y\":60,\"_angle\":2.246},{\"x\":99,\"y\":50,\"_angle\":4.931}]},{\"x\":99,\"y\":50,\"border\":false,\"links\":[{\"x\":90,\"y\":40,\"_angle\":3.98},{\"x\":100,\"y\":40,\"_angle\":6.184},{\"x\":90,\"y\":52,\"_angle\":1.789},{\"x\":100,\"y\":60,\"_angle\":1.471},{\"x\":110,\"y\":51,\"_angle\":0.091}]},{\"x\":110,\"y\":51,\"border\":false,\"links\":[{\"x\":110,\"y\":40,\"_angle\":4.712},{\"x\":120,\"y\":40,\"_angle\":5.545},{\"x\":100,\"y\":40,\"_angle\":3.975},{\"x\":99,\"y\":50,\"_angle\":3.232},{\"x\":110,\"y\":60,\"_angle\":1.571},{\"x\":100,\"y\":60,\"_angle\":2.304},{\"x\":119,\"y\":52,\"_angle\":0.111}]},{\"x\":119,\"y\":52,\"border\":false,\"links\":[{\"x\":130,\"y\":60,\"_angle\":0.629},{\"x\":120,\"y\":60,\"_angle\":1.446},{\"x\":110,\"y\":51,\"_angle\":3.252},{\"x\":120,\"y\":40,\"_angle\":6.2},{\"x\":110,\"y\":60,\"_angle\":2.297},{\"x\":128,\"y\":49,\"_angle\":5.034}]},{\"x\":128,\"y\":49,\"border\":false,\"links\":[{\"x\":119,\"y\":52,\"_angle\":1.893},{\"x\":120,\"y\":40,\"_angle\":3.986},{\"x\":140,\"y\":50,\"_angle\":0.083},{\"x\":130,\"y\":60,\"_angle\":1.391},{\"x\":130,\"y\":41,\"_angle\":6.038}]},{\"x\":130,\"y\":41,\"border\":false,\"links\":[{\"x\":120,\"y\":40,\"_angle\":3.241},{\"x\":120,\"y\":30,\"_angle\":3.975},{\"x\":140,\"y\":30,\"_angle\":5.545},{\"x\":140,\"y\":40,\"_angle\":4.812},{\"x\":128,\"y\":49,\"_angle\":2.897},{\"x\":140,\"y\":50,\"_angle\":0.733},{\"x\":131,\"y\":26,\"_angle\":6.217}]},{\"x\":128,\"y\":13,\"border\":false,\"links\":[{\"x\":120,\"y\":10,\"_angle\":3.5},{\"x\":130,\"y\":0,\"_angle\":6.131},{\"x\":140,\"y\":10,\"_angle\":4.957},{\"x\":120,\"y\":20,\"_angle\":2.29},{\"x\":140,\"y\":20,\"_angle\":0.528},{\"x\":131,\"y\":26,\"_angle\":1.344}]},{\"x\":131,\"y\":26,\"border\":false,\"links\":[{\"x\":120,\"y\":30,\"_angle\":1.92},{\"x\":120,\"y\":20,\"_angle\":3.641},{\"x\":140,\"y\":20,\"_angle\":5.3},{\"x\":140,\"y\":30,\"_angle\":0.418},{\"x\":130,\"y\":41,\"_angle\":3.075},{\"x\":128,\"y\":13,\"_angle\":4.486}]}]'\r\n    \r\n     onLoad() {\r\n        this.polygonPoints = [];\r\n        console.log(\"ONLOAD\")\r\n        if(this.node.getComponent(DelaunayAssemblerImplementer)==null) {\r\n        this.implementer = this.node.addComponent(DelaunayAssemblerImplementer);\r\n        this.implementer.baseTexture = this.baseTexture;\r\n        this.implementer.Render_Mat = this.Render_Mat;\r\n        if (this.ancestor) {\r\n            this.createPlainVertexData()\r\n            JSON.parse(this.jsonObject).forEach(vertex => {\r\n                if (vertex.border == true) {\r\n                    this.polygonPoints.push(new Vec2(vertex.x, vertex.y))\r\n                }\r\n            })\r\n\r\n            console.log(this.polygonPoints)\r\n            this.node.getComponent(PolygonCollider2D).points = this.polygonPoints;\r\n            this.node.getComponent(PolygonCollider2D).apply();\r\n            this.implementer.customLoad(this.polygonPoints)\r\n           \r\n            this.node.getComponent(RigidBody2D).enabled = true;\r\n            this.setListeners();\r\n        }  \r\n      \r\n    }\r\n    console.log(\"REAL AREA: \"+this.implementer.getArea())\r\n    }\r\n\r\n\r\n\r\n\r\n    customLoad(points:Vec2[]) {\r\n        console.log(\"TIMED\")\r\n        this.scheduleOnce(()=>{\r\n            let c = this.node.getComponent(RigidBody2D);\r\n            this.node.getComponent(PolygonCollider2D).points=points;\r\n            this.node.getComponent(PolygonCollider2D).apply();\r\n            this.node.getComponent(FractDelaunay).polygonPoints=points;\r\n            c.enabled = true;\r\n            this.setListeners();\r\n        },0.1) \r\n    }\r\n\r\n    protected onEnable(): void {\r\n        \r\n        console.log(\"ON ENABLE\")\r\n         \r\n    }\r\n\r\n    createPlainVertexData() {\r\n        JSON.parse(this.jsonObject).forEach(verte => {\r\n            let pV = new plainVertex(verte.x, verte.y, verte.border);\r\n            verte.links.forEach(linke => {\r\n                if (linke != null) { pV.links.push(new linkNode(linke.x, linke.y, linke._angle)); }\r\n            });\r\n            this.delaunayPoints.push(pV);\r\n        })\r\n    }\r\n\r\n\r\n    start() {\r\n        console.log(\"ON START\")\r\n       \r\n        this.previousPos=new Vec2(this.node.position.x, this.node.position.y);\r\n        this.previousTime=0;\r\n        this.velVect=new Vec2(0,0);\r\n     }\r\n\r\n    setListeners() {\r\n        let p = this.node.getComponent(PolygonCollider2D);\r\n        p.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        p.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n      this.previousTime+=deltaTime;\r\n        if(this.previousTime>0.2) {\r\n            let newPos=new Vec2(this.node.position.x, this.node.position.y);\r\n            this.velVect=new Vec2((newPos.x-this.previousPos.x)/this.previousTime,(newPos.y-this.previousPos.y)/this.previousTime);\r\n            this.previousPos= newPos;\r\n            this.previousTime=0;\r\n        } \r\n  }\r\n\r\n\r\n \r\n\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        console.log(\"CONTACT!\")\r\n        let otherFracturable = otherCollider.getComponent(FractDelaunay);\r\n        let enoughImpulse=false;\r\n        if (this.recursiveness > 0 && this.available) {\r\n            if(otherFracturable!=null) {\r\n                let velA= this.velVect;\r\n                let velB= otherFracturable.velVect;\r\n            console.log(\"OTHER VELOCITY: \"+ velA);\r\n            console.log(\"THIS VELOCITY: \"+ velB);\r\n            if(Math.abs(velA.x-velB.x)>100){\r\n                console.log(\"DIF X > 500 \")\r\n                enoughImpulse=true;\r\n            } \r\n            if(Math.abs(velA.y-velB.y)>100){\r\n                enoughImpulse=true;\r\n                console.log(\"DIF Y > 500 \")\r\n            } \r\n\r\n            }\r\n            if (otherCollider.node.name == \"Stomper\" || (otherFracturable!=null && enoughImpulse)) {\r\n                //    if(otherCollider.node.name == \"Stomper\") {\r\n                this.available = false;\r\n                var inverseWorldMatrix = new Mat4();\r\n                Mat4.invert(inverseWorldMatrix, this.node.getWorldMatrix());\r\n                let localContactPoint = contact.getWorldManifold().points[0].transformMat4(inverseWorldMatrix);\r\n                let normalContactPoint = contact.getManifold().localNormal\r\n                this.fractureObj = new DelaunayFracture(localContactPoint, normalContactPoint, this.node.getComponent(PolygonCollider2D).points, this.delaunayPoints);\r\n                let result = findFracture(this.fractureObj);\r\n                if (this.fractureObj.getDelaunayPoints() != null && this.fractureObj.getDelaunayPoints().length > 1 && result) {\r\n                    console.log(\"Queueing Fracturable...\")\r\n                  //  this.createCopy(this.fractureObj);\r\n                  StaticFractureManager.cola.enqueue(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    lengthVector(a: Vec2, b: Vec2) {\r\n        return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n    }\r\n\r\n\r\n    center(coords: plainVertex[]) {\r\n        let maxX: number = -10000;\r\n        let minX: number = 10000\r\n        let maxY: number = -10000;\r\n        let minY: number = 10000\r\n        coords.forEach(element => {\r\n            if (element.x < minX) minX = element.x\r\n            if (element.x > maxX) maxX = element.x\r\n            if (element.y < minY) minY = element.y\r\n            if (element.y > maxY) maxY = element.y\r\n\r\n        });\r\n        let offsetX = (maxX - minX) / 2\r\n        let offsetY = (maxY - minY) / 2\r\n        coords.forEach(element => {\r\n            element.x = element.x - offsetX;\r\n            element.y = element.y - offsetY;\r\n            element.links.forEach(e => {\r\n                e.x = e.x - offsetX\r\n                e.y = e.y - offsetY\r\n            })\r\n        });\r\n    }\r\n\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) { }\r\n\r\n}\r\n\r\n\r\n"]}